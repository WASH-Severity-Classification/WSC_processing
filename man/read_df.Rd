% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read.R
\name{read_df}
\alias{read_df}
\title{Read data from multiple formats}
\usage{
read_df(ss, sheet, data_source_name, ...)
}
\arguments{
\item{ss}{character URL to the spreadsheet to be read. If ss does not match the
googlesheet URL pattern
(URL starts with "https://docs.google.com/spreadsheets"), the function
will try to read the file by finding all files with the data_source_name
parameters with the supported extensions (.csv, .xls, .xlsx, and .sav).}

\item{sheet}{character string with name of the sheet to be read}

\item{data_source_name}{character string containing the name of the data source to
be analysed according to the analysis plan.}

\item{...}{}
}
\value{
dataframe containing the read data.
}
\description{
This function takes information on how to read the data and tries different
options.
If parameter ss is empty or not compatible to a google sheet format
(URL starts with "https://docs.google.com/spreadsheets"), the function will
try to guess the extension of file by looking for all files in working
directory and find files that contain the data_source_name parameter and ends
with one of the supported file format:
\itemize{
\item{"csv"}{.csv}
\item{"xls"}{.xls}
\item{"xlsx"}{.xlsx}
\item{"sav"}{.sav}
}
If more than one file is found that could be matching, the function does not
read any file to avoid issues by reading the wrong files. For instance, if
you try to use the function as follow:
\code{read_df(ss = "", sheet = NA, data_source_name = "data")} the function
will look for any file where 'data' can be found in the name and read it.
This is obvisouly a quite hasardous entreprise, so data_source_name should be
as specific as possible.
}
\examples{
\dontrun{
read_data <- read_df(ss = "https://docs.google.com/spreadsheets/d/1D13q4DP2p-ObvW6_b0rQ1O16dHbJGYCDoAYBDS6jDq4/edit?usp=sharing",
    sheet = "cleaned_data",
    data_source_name = "smart_rapid_idp_2020")

}
}
